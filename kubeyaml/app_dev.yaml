apiVersion: v1
kind: Service
metadata:
  name: mongodb-server
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-server
spec:
  type: NodePort 
  ports:
  - name: node 
    port: 8081 
    protocol: TCP
    targetPort: 8081 
  selector:
    app: nodejs
---
apiVersion: v1
kind: Pod
metadata:
  name: mongo.trznt.com
  labels:
    app: mongodb
spec:
  containers:
  - name: mongodb
    image: registry.au-syd.bluemix.net/kumarsp/mongo:1.4
    args: ["--sslMode","requireSSL","--sslPEMKeyFile","/keys/mongodb.pem","--sslCAFile","/keys/caroot.cer","--bind_ip_all"]
    ports:
      - containerPort: 27017
    volumeMounts:
    - name: mongo-storage
      mountPath: /data/db
  
  volumes:
  - name: mongo-storage
    emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
  labels:
    app: nodejs
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: backend
    matchExpressions:
     - {key: tier, operator: In, values: [backend]}
  template:
    metadata:
      labels:
        app: nodejs
        tier: backend
    spec:
      containers:
        - name: nodejs
          image: registry.au-syd.bluemix.net/kumarsp/node:1.6
          env:
            - name: DBSERVER
              value: "mongodb-server"
            - name: KEYS
              value: "/keys"
          workingDir: /usr/app
          command: ["npm"]
          args: ["start"]
          ports:
          - containerPort: 8081

